<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on Ramblings on lessons</title>
    <link>https://geekgunda.github.io/tags/mysql/</link>
    <description>Recent content in mysql on Ramblings on lessons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 19 Sep 2020 15:35:14 -0400</lastBuildDate><atom:link href="https://geekgunda.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using MySQL JSON data type with Go</title>
      <link>https://geekgunda.github.io/posts/mysql-json-data-with-go/</link>
      <pubDate>Sat, 19 Sep 2020 15:35:14 -0400</pubDate>
      
      <guid>https://geekgunda.github.io/posts/mysql-json-data-with-go/</guid>
      <description>tl;dr:
 Use json-encoded []byte to write to a JSON column in MySQL
Use json.RawMessage to read a JSON column from MySQL
  Recently, I was trying to use MySQL 8.0&amp;rsquo;s JSON data type within a Go project.
After a long, unsatisfactory search, multiple trial and errors, I found a working solution.
So I thought I&amp;rsquo;d document it here for future reference.
Bringing up a MySQL server A simple docker-compose file to setup mysql server:</description>
    </item>
    
  </channel>
</rss>
